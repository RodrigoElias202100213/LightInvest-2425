@model LightInvest.Models.RegisterViewModel

@{
    ViewData["Title"] = "Registo";
}

<div class="register-container">
    <div class="register-box">
        <div class="sidebar">
            <img src="~/images/logo.jpg" alt="LightInvest Logo" style="width: 3000px; height: auto;" />
        </div>

        <div class="register-form">
            <ul class="tabs">
                <li><a href="@Url.Action("Login", "Account")" style="text-decoration: none; border: none;">Login</a></li>
                <li class="active">Registar</li>
            </ul>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    @TempData["SuccessMessage"]
                </div>
            }

            <form method="post">
                <div class="form-group">
                    <label for="name">Nome *</label>
                    <input type="text" id="name" name="name" placeholder="Nome" required
                           value="@Model.Name" />
                    @if (ViewData.ModelState["Name"]?.Errors.Count > 0)
                    {
                        <div class="error-message">@ViewData.ModelState["Name"].Errors[0].ErrorMessage</div>
                    }
                </div>

                <div class="form-group">
                    <label for="email">Email *</label>
                    <input type="email" id="email" name="email" placeholder="Email" required
                           value="@Model.Email" />
                    @if (ViewData.ModelState["Email"]?.Errors.Count > 0)
                    {
                        <div class="error-message">@ViewData.ModelState["Email"].Errors[0].ErrorMessage</div>
                    }
                </div>

                <div class="form-group">
                    <label for="password">Palavra-Passe *</label>
                    <input type="password" id="password" name="password" placeholder="Palavra-Passe" required
                           value="@Model.Password" />
                    @if (ViewData.ModelState["Password"]?.Errors.Count > 0)
                    {
                        <div class="error-message">@ViewData.ModelState["Password"].Errors[0].ErrorMessage</div>
                    }
                </div>

                <div class="form-group">
                    <label for="confirmPassword">Confirmação da Palavra-Passe *</label>
                    <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirmação da Palavra-Passe" required
                           value="@Model.ConfirmPassword" />
                    @if (ViewData.ModelState["ConfirmPassword"]?.Errors.Count > 0)
                    {
                        <div class="error-message">@ViewData.ModelState["ConfirmPassword"].Errors[0].ErrorMessage</div>
                    }
                </div>

                <div class="form-actions">
                    <button type="submit">Registar</button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    .register-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background-color: #f9f9f9;
    }

    .register-box {
        display: flex;
        background: white;
        width: 800px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .sidebar {
        background-color: #065A66;
        color: white;
        padding: 20px;
        flex: 1;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .sidebar img {
        max-width: 250px;
        margin: 0 auto 20px;
    }

    .register-form {
        flex: 2;
        padding: 30px;
    }

    .tabs {
        display: flex;
        justify-content: space-between;
        margin-bottom: 20px;
    }

    .tabs li {
        flex: 1;
        text-align: center;
        cursor: pointer;
        padding: 10px 15px;
        border-radius: 30px;
        font-weight: 500;
        text-align: center;
        background-color: #f1f1f1;
        transition: background-color 0.3s ease, color 0.3s ease;
        list-style: none;
        margin: 0 10px;
    }

    .tabs .active {
        font-weight: bold;
        border-bottom: 2px solid #065A66;
    }

    .tabs li:hover {
         background-color: #065A66;
        color: white;
    }

    .tabs li a {
        text-decoration: none; 
        border: none; 
        color: inherit;
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-group input {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .form-actions {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }

    .form-actions button {
        padding: 10px 25px;
        background-color: #065A66;
        color: white;
        border: none;
        border-radius: 25px;
        font-size: 1em;
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.2s ease;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-top: 20px; 
    }

    .form-actions button:hover {
        background-color: #4C7B8B;
        transform: scale(1.05);
    }

    .form-actions button:active {
        background-color: #00332a;
    }

    .error-message {
        color: red;
        font-size: 0.9em;
        margin-top: 5px;
    }
</style>
